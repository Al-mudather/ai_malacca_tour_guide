// Mocks generated by Mockito 5.4.5 from annotations
// in ai_malacca_tour_guide/test/place_itinerary_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ai_malacca_tour_guide/database/base/database_helper.dart'
    as _i2;
import 'package:ai_malacca_tour_guide/database/crud/place_itineraries_crud.dart'
    as _i4;
import 'package:ai_malacca_tour_guide/models/place_itinerary_model.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabaseHelper_0 extends _i1.SmartFake
    implements _i2.DatabaseHelper {
  _FakeDatabaseHelper_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePlaceItineraryModel_1 extends _i1.SmartFake
    implements _i3.PlaceItineraryModel {
  _FakePlaceItineraryModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PlaceItinerariesCRUD].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlaceItinerariesCRUD extends _i1.Mock
    implements _i4.PlaceItinerariesCRUD {
  MockPlaceItinerariesCRUD() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DatabaseHelper get dbHelper =>
      (super.noSuchMethod(
            Invocation.getter(#dbHelper),
            returnValue: _FakeDatabaseHelper_0(
              this,
              Invocation.getter(#dbHelper),
            ),
          )
          as _i2.DatabaseHelper);

  @override
  _i5.Future<_i3.PlaceItineraryModel> createPlaceItinerary(
    _i3.PlaceItineraryModel? placeItinerary,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPlaceItinerary, [placeItinerary]),
            returnValue: _i5.Future<_i3.PlaceItineraryModel>.value(
              _FakePlaceItineraryModel_1(
                this,
                Invocation.method(#createPlaceItinerary, [placeItinerary]),
              ),
            ),
          )
          as _i5.Future<_i3.PlaceItineraryModel>);

  @override
  _i5.Future<_i3.PlaceItineraryModel?> getPlaceItineraryById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPlaceItineraryById, [id]),
            returnValue: _i5.Future<_i3.PlaceItineraryModel?>.value(),
          )
          as _i5.Future<_i3.PlaceItineraryModel?>);

  @override
  _i5.Future<List<_i3.PlaceItineraryModel>> getPlaceItinerariesByDayId(
    int? dayItineraryId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPlaceItinerariesByDayId, [dayItineraryId]),
            returnValue: _i5.Future<List<_i3.PlaceItineraryModel>>.value(
              <_i3.PlaceItineraryModel>[],
            ),
          )
          as _i5.Future<List<_i3.PlaceItineraryModel>>);

  @override
  _i5.Future<int> updatePlaceItinerary(
    _i3.PlaceItineraryModel? placeItinerary,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePlaceItinerary, [placeItinerary]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePlaceItinerary(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePlaceItinerary, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deleteDayPlaces(int? dayItineraryId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteDayPlaces, [dayItineraryId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> getDayTotalCost(int? dayItineraryId) =>
      (super.noSuchMethod(
            Invocation.method(#getDayTotalCost, [dayItineraryId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);
}
